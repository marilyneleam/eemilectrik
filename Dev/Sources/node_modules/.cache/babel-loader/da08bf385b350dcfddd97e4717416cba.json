{"ast":null,"code":"var _jsxFileName = \"/Users/mleam/Desktop/eemilectrik/Dev/Sources/src/Production.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Production() {\n  _s();\n\n  const [file, setFile] = useState();\n  const [array, setArray] = useState([]);\n  const fileReader = new FileReader();\n\n  const handleOnChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  const csvFileToArray = string => {\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n    const array = csvRows.map(i => {\n      const values = i.split(\",\");\n      const obj = csvHeader.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return obj;\n    });\n    var total = array.map(element => element[\"AC output active power S\"]);\n\n    function round(num, precision) {\n      precision = Math.pow(10, precision);\n      return Math.ceil(num * precision) / precision;\n    }\n\n    function table(hours, kw) {\n      this.hours = hours;\n      this.kw = kw;\n    }\n\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 11;\n    var z = 23;\n\n    while (i < total.length - 1) {\n      var sum = 0;\n\n      for (j = k; j <= l && l <= total.length - 1; j++) {\n        sum = Number(sum) + Number(total[j]) / 1000;\n      }\n\n      k = j;\n      l = l + 12;\n      var tab = new table(z, round(sum, 2));\n      console.table(tab);\n      i += 12;\n      z--;\n    }\n\n    setArray(array);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (file) {\n      fileReader.onload = function (event) {\n        const text = event.target.result;\n        csvFileToArray(text);\n      };\n\n      fileReader.readAsText(file);\n    }\n  };\n\n  const headerKeys = Object.keys(Object.assign({}, ...array));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PRODUCTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csvFileInput\",\n        accept: \".csv\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleOnSubmit(e);\n        },\n        children: \"IMPORT CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerKeys.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 16\n          }, this))\n        }, \"header\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: array.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(item).map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 18\n          }, this))\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Production, \"h3eL3hvQr93LfP3b8N5IxT4u7Eo=\");\n\n_c = Production;\nexport default Production;\n\nvar _c;\n\n$RefreshReg$(_c, \"Production\");","map":{"version":3,"names":["useState","Production","file","setFile","array","setArray","fileReader","FileReader","handleOnChange","e","target","files","csvFileToArray","string","csvHeader","slice","indexOf","split","csvRows","map","i","values","obj","reduce","object","header","index","total","element","round","num","precision","Math","pow","ceil","table","hours","kw","j","k","l","z","length","sum","Number","tab","console","handleOnSubmit","preventDefault","onload","event","text","result","readAsText","headerKeys","Object","keys","assign","textAlign","key","item","val","id"],"sources":["/Users/mleam/Desktop/eemilectrik/Dev/Sources/src/Production.tsx"],"sourcesContent":["import { useState } from 'react';\n\n function Production() {\n   const [file, setFile] = useState();\n   const [array, setArray] = useState<any[]>([]);\n \n   const fileReader = new FileReader();\n \n   const handleOnChange = (e) => {\n     setFile(e.target.files[0]);\n   };\n \n   const csvFileToArray = string => {\n     const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n     const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n \n     const array = csvRows.map(i => {\n       const values = i.split(\",\");\n       const obj = csvHeader.reduce((object, header, index) => {\n         object[header] = values[index];\n         return object;\n       }, {});\n       return obj;\n     });\n     var total = array.map((element: any) => element[\"AC output active power S\"]);\n\n     function round(num, precision) {\n      precision = Math.pow(10, precision);\n      return Math.ceil(num * precision) / precision;\n     }\n\nfunction table (this: any, hours, kw) {\n  this.hours = hours;\n  this.kw = kw;\n}\n\n     var i = 0;\n     var j = 0;\n     var k = 0;\n     var l = 11;\n     var z = 23;\n\n     while (i < total.length -1)\n     {\n        var sum = 0;\n        for (j = k ; j <= l && l <= total.length -1 ; j++) {\n          sum = (Number(sum) + Number(total[j]) / 1000 );\n        }\n        k = j;\n        l = l + 12;\n        var tab = new table(z, round(sum, 2));\n\n        console.table(tab);\n        i+=12;\n        z--;\n     }\n\n     setArray(array);\n   };\n \n   const handleOnSubmit = (e) => {\n     e.preventDefault();\n \n     if (file) {\n       fileReader.onload = function (event) {\n         const text = event.target!.result;\n         csvFileToArray(text);\n       };\n \n       fileReader.readAsText(file);\n     }\n   };\n \n   const headerKeys = Object.keys(Object.assign({}, ...array));\n \n   return (\n     <div style={{ textAlign: \"center\" }}>\n       <h1>PRODUCTION</h1>\n       <form>\n         <input\n           type={\"file\"}\n           id={\"csvFileInput\"}\n           accept={\".csv\"}\n           onChange={handleOnChange}\n         />\n \n         <button\n           onClick={(e) => {\n             handleOnSubmit(e);\n           }}\n         >\n           IMPORT CSV\n         </button>\n       </form>\n \n       <br />\n \n       <table>\n         <thead>\n           <tr key={\"header\"}>\n             {headerKeys.map((key) => (\n               <th>{key}</th>\n             ))}\n           </tr>\n         </thead>\n \n         <tbody>\n           {array.map((item) => (\n             <tr key={item.id}>\n               {Object.values(item).map((val:any) => (\n                 <td>{val}</td>\n               ))}\n             </tr>\n           ))}\n         </tbody>\n       </table>\n     </div>\n   );\n }\n\nexport default Production;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}